{"version":3,"sources":["frontend/MotionMergeAmendmentsConfirm.ts"],"names":["MotionMergeAmendmentsConfirm","$widget","this","$sections","find","change","onChangeDiffStyle","bind","first","initResolutionFunctions","initVotingFunctions","prototype","val","addClass","removeClass","_this","$newStatus","on","filter","trigger","datetimepicker","locale","$","attr","format","$closer","$opener","$inputRows","click","exports"],"mappings":"+IAAA,IAAAA,EAAA,WAII,SAAAA,EAAmBC,GAAAC,KAAAD,QAAAA,EACfC,KAAKC,UAAYF,EAAQG,KAAK,qBAC9BH,EAAQG,KAAK,yBAAyBC,OAAOH,KAAKI,kBAAkBC,KAAKL,OACzED,EAAQG,KAAK,yBAAyBI,QAAQH,SAE9CH,KAAKO,0BACLP,KAAKQ,sBA4Cb,OAzCYV,EAAAW,UAAAL,kBAAR,WAEiB,QADDJ,KAAKD,QAAQG,KAAK,iCAAiCQ,OAE3DV,KAAKC,UAAUC,KAAK,aAAaS,SAAS,UAC1CX,KAAKC,UAAUC,KAAK,aAAaU,YAAY,YAE7CZ,KAAKC,UAAUC,KAAK,aAAaU,YAAY,UAC7CZ,KAAKC,UAAUC,KAAK,aAAaS,SAAS,YAI1Cb,EAAAW,UAAAF,wBAAR,WAAA,IAAAM,EAAAb,KACIA,KAAKc,WAAad,KAAKD,QAAQG,KAAK,0BACpCF,KAAKc,WAAWC,GAAG,SAAU,WACwB,WAA7CF,EAAKC,WAAWE,OAAO,YAAYN,MACnCG,EAAKd,QAAQG,KAAK,uBAAuBS,SAAS,UAElDE,EAAKd,QAAQG,KAAK,uBAAuBU,YAAY,YAE1DK,QAAQ,UACXjB,KAAKD,QAAQG,KAAK,yBAAyBgB,eAAe,CACtDC,OAAQC,EAAE,QAAQC,KAAK,QACvBC,OAAQ,OAIRxB,EAAAW,UAAAD,oBAAR,WACI,IAAMe,EAAUH,EAAE,uBACdI,EAAUJ,EAAE,uBACZK,EAAaL,EAAE,qDACnBI,EAAQE,MAAM,WACVH,EAAQX,YAAY,UACpBY,EAAQb,SAAS,UACjBc,EAAWb,YAAY,YAE3BW,EAAQG,MAAM,WACVH,EAAQZ,SAAS,UACjBa,EAAQZ,YAAY,UACpBa,EAAWd,SAAS,aAGhCb,EAtDA,GAAa6B,EAAA7B,6BAAAA","file":"MotionMergeAmendmentsConfirm.js","sourcesContent":["export class MotionMergeAmendmentsConfirm {\n    private $sections: JQuery;\n    private $newStatus: JQuery;\n\n    constructor(public $widget: JQuery) {\n        this.$sections = $widget.find(\".motionTextHolder\");\n        $widget.find(\"input[name=diffStyle]\").change(this.onChangeDiffStyle.bind(this));\n        $widget.find(\"input[name=diffStyle]\").first().change();\n\n        this.initResolutionFunctions();\n        this.initVotingFunctions();\n    }\n\n    private onChangeDiffStyle() {\n        let style = this.$widget.find(\"input[name=diffStyle]:checked\").val();\n        if (style == 'diff') {\n            this.$sections.find(\".fullText\").addClass('hidden');\n            this.$sections.find(\".diffText\").removeClass('hidden');\n        } else {\n            this.$sections.find(\".fullText\").removeClass('hidden');\n            this.$sections.find(\".diffText\").addClass('hidden');\n        }\n    }\n\n    private initResolutionFunctions() {\n        this.$newStatus = this.$widget.find('.newMotionStatus input');\n        this.$newStatus.on('change', () => {\n            if (this.$newStatus.filter(':checked').val() === 'motion') {\n                this.$widget.find('.newMotionInitiator').addClass('hidden');\n            } else {\n                this.$widget.find('.newMotionInitiator').removeClass('hidden');\n            }\n        }).trigger('change');\n        this.$widget.find(\"#dateResolutionHolder\").datetimepicker({\n            locale: $(\"html\").attr('lang'),\n            format: 'L'\n        });\n    }\n\n    private initVotingFunctions() {\n        const $closer = $(\".votingResultCloser\"),\n            $opener = $(\".votingResultOpener\"),\n            $inputRows = $(\".contentVotingResult, .contentVotingResultComment\");\n        $opener.click(() => {\n            $closer.removeClass(\"hidden\");\n            $opener.addClass(\"hidden\");\n            $inputRows.removeClass(\"hidden\");\n        });\n        $closer.click(() => {\n            $closer.addClass(\"hidden\");\n            $opener.removeClass(\"hidden\");\n            $inputRows.addClass(\"hidden\");\n        });\n    }\n}\n"]}