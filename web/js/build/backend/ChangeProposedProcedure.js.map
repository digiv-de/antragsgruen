{"version":3,"sources":["backend/ChangeProposedProcedure.ts"],"names":["ChangeProposedProcedure","$widget","this","savingComment","initElements","initOpener","initStatusSetter","initCommentForm","initVotingBlock","initExplanation","on","ev","preventDefault","prototype","$statusDetails","find","$visibilityInput","$votingStatusInput","$votingBlockId","$openerBtn","$","context","data","saveUrl","attr","csrf","val","_this","click","removeClass","addClass","localStorage","setItem","getItem","reinitAfterReload","statusChanged","commentsScrollBottom","selectlist","setGlobalProposedStr","html","performCallWithReload","post","ret","$content","children","remove","append","window","setTimeout","alert","fail","notifyProposer","text","fromName","replyTo","setPropserHasAccepted","confirm","bootbox","result","setProposerHasAccepted","sendAgain","saveStatus","newVal","setStatus","visible","prop","votingBlockId","length","filter","currentTarget","init","trigger","parents","bind","target","$commentList","scrollTop","scrollHeight","doSaveComment","$commentWidget","writeComment","_csrf","success","delHtml","comment","delLink","$comment","dateFormatted","username","id","JSON","stringify","delComment","originalEvent","first","exports"],"mappings":"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","file":"ChangeProposedProcedure.js","sourcesContent":["const STATUS_REFERRED = 10;\nconst STATUS_VOTE = 11;\nconst STATUS_OBSOLETED_BY = 22;\nconst STATUS_CUSTOM_STRING = 23;\n\nexport class ChangeProposedProcedure {\n    private $openerBtn: JQuery;\n    private $statusDetails: JQuery;\n    private $visibilityInput: JQuery;\n    private $votingStatusInput: JQuery;\n    private $votingBlockId: JQuery;\n    private saveUrl: string;\n    private context: string;\n    private csrf: string;\n    private savingComment: boolean = false;\n\n    constructor(private $widget: JQuery) {\n        this.initElements();\n        this.initOpener();\n        this.initStatusSetter();\n        this.initCommentForm();\n        this.initVotingBlock();\n        this.initExplanation();\n        $widget.on(\"submit\", ev => ev.preventDefault());\n    }\n\n    private initElements() {\n        this.$statusDetails = this.$widget.find('.statusDetails');\n        this.$visibilityInput = this.$widget.find('input[name=proposalVisible]');\n        this.$votingStatusInput = this.$widget.find('input[name=votingStatus]');\n        this.$votingBlockId = this.$widget.find('input[name=votingBlockId]');\n        this.$openerBtn = $('.proposedChangesOpener button');\n        this.context = this.$widget.data('context');\n        this.saveUrl = this.$widget.attr('action');\n        this.csrf = this.$widget.find('input[name=_csrf]').val() as string;\n    }\n\n    private initOpener() {\n        this.$openerBtn.click(() => {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '1');\n        });\n        this.$widget.on('click', '.closeBtn', () => {\n            this.$widget.addClass('hidden');\n            this.$openerBtn.removeClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '0');\n        });\n\n        if (localStorage.getItem('proposed_procedure_enabled') === '1') {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n        } else {\n            this.$widget.addClass('hidden');\n        }\n    }\n\n    private reinitAfterReload() {\n        this.initElements();\n        this.statusChanged();\n        this.commentsScrollBottom();\n        this.initExplanation();\n        this.$widget.find('.newBlock').addClass('hidden');\n        this.$widget.find('.selectlist').selectlist();\n        this.$widget.find('.notifyProposerSection').addClass('hidden');\n    }\n\n    private setGlobalProposedStr(html: string) {\n        $(\".motionData .proposedStatusRow .str\").html(html);\n    }\n\n    private performCallWithReload(data: object) {\n        data['_csrf'] = this.csrf;\n\n        $.post(this.saveUrl, data, (ret) => {\n            if (ret['success']) {\n                let $content = $(ret['html']);\n                this.$widget.children().remove();\n                this.$widget.append($content.children());\n                this.reinitAfterReload();\n                this.$widget.addClass('showSaved').removeClass('isChanged');\n                if (ret['proposalStr']) {\n                    this.setGlobalProposedStr(ret['proposalStr']);\n                }\n                window.setTimeout(() => this.$widget.removeClass('showSaved'), 2000);\n            } else if (ret['error']) {\n                alert(ret['error']);\n            } else {\n                alert('An error occurred');\n            }\n        }).fail(() => {\n            alert('Could not save');\n        });\n    }\n\n    private notifyProposer() {\n        const text = this.$widget.find('textarea[name=proposalNotificationText]').val(),\n            fromName = this.$widget.find('input[name=proposalNotificationFrom]').val(),\n            replyTo = this.$widget.find('input[name=proposalNotificationReply]').val();\n        this.performCallWithReload({\n            'notifyProposer': '1',\n            'text': text,\n            'fromName': fromName,\n            'replyTo': replyTo,\n        });\n    }\n\n    private setPropserHasAccepted() {\n        const confirm = this.$widget.find('.setConfirmation').data('msg');\n        bootbox.confirm(confirm, (result) => {\n            if (result) {\n                this.performCallWithReload({\n                    'setProposerHasAccepted': '1',\n                });\n            }\n        });\n    }\n\n    private sendAgain() {\n        const confirm = this.$widget.find('.sendAgain').data('msg');\n        bootbox.confirm(confirm, (result) => {\n            if (result) {\n                this.performCallWithReload({\n                    'sendAgain': '1',\n                });\n            }\n        });\n    }\n\n    private saveStatus() {\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        let data = {\n            setStatus: newVal,\n            visible: (this.$visibilityInput.prop('checked') ? 1 : 0),\n            votingBlockId: this.$votingBlockId.val(),\n        };\n\n        if (newVal == STATUS_REFERRED) {\n            data['proposalComment'] = this.$widget.find('input[name=referredTo]').val();\n        }\n        if (newVal == STATUS_OBSOLETED_BY) {\n            if (this.$widget.find('input[name=obsoletedByAmendment]').length > 0) {\n                data['proposalComment'] = this.$widget.find('input[name=obsoletedByAmendment]').val();\n            } else {\n                data['proposalComment'] = this.$widget.find('input[name=obsoletedByMotion]').val();\n            }\n        }\n        if (newVal == STATUS_CUSTOM_STRING) {\n            data['proposalComment'] = this.$widget.find('input[name=statusCustomStr]').val();\n        }\n        if (newVal == STATUS_VOTE) {\n            data['votingStatus'] = this.$votingStatusInput.filter(':checked').val();\n        }\n        if (data.votingBlockId == 'NEW') {\n            data['votingBlockTitle'] = this.$widget.find('input[name=newBlockTitle]').val();\n        }\n\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            data['proposalExplanation'] = this.$widget.find('textarea[name=proposalExplanation]').val();\n        }\n\n        this.performCallWithReload(data);\n    }\n\n    private statusChanged() {\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        this.$statusDetails.addClass('hidden');\n        this.$statusDetails.filter('.status_' + newVal).removeClass('hidden');\n        if (newVal == 0) {\n            this.$widget.addClass('noStatus');\n        } else {\n            this.$widget.removeClass('noStatus');\n        }\n    }\n\n    private initStatusSetter() {\n        this.$widget.on('change', '.statusForm input[type=radio]', (ev, data) => {\n            if (!$(ev.currentTarget).prop('checked')) {\n                return;\n            }\n            this.statusChanged();\n            if (data && data.init === true) {\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.find('.statusForm input[type=radio]').trigger('change', {'init': true});\n\n        this.$widget.on('change keyup', 'input, textarea', (ev) => {\n            if ($(ev.currentTarget).parents('.proposalCommentForm').length > 0) { // The comment textfield\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('changed.fu.selectlist', '#obsoletedByAmendment', () => {\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('click', '.saving button', this.saveStatus.bind(this));\n\n        this.$widget.on('click', '.notifyProposer', () => {\n            this.$widget.find('.notifyProposerSection').removeClass('hidden');\n        });\n        this.$widget.on('click', '.setConfirmation', this.setPropserHasAccepted.bind(this));\n        this.$widget.on('click', '.sendAgain', this.sendAgain.bind(this));\n        this.$widget.on('click', 'button[name=notificationSubmit]', this.notifyProposer.bind(this));\n    }\n\n    private initVotingBlock() {\n        this.$widget.on('changed.fu.selectlist', '#votingBlockId', () => {\n            this.$widget.addClass('isChanged');\n            if (this.$votingBlockId.val() == 'NEW') {\n                this.$widget.find(\".newBlock\").removeClass('hidden');\n            } else {\n                this.$widget.find(\".newBlock\").addClass('hidden');\n            }\n        });\n        this.$widget.find('.newBlock').addClass('hidden');\n    }\n\n    private initExplanation() {\n        this.$widget.find('input[name=setPublicExplanation]').on('change', (ev) => {\n            if ($(ev.target).prop('checked')) {\n                this.$widget.find('section.publicExplanation').removeClass('hidden');\n            } else {\n                this.$widget.find('section.publicExplanation').addClass('hidden');\n            }\n        });\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            this.$widget.find('section.publicExplanation').removeClass('hidden');\n        } else {\n            this.$widget.find('section.publicExplanation').addClass('hidden');\n        }\n    }\n\n    private commentsScrollBottom() {\n        let $commentList = this.$widget.find('.proposalCommentForm .commentList');\n        $commentList[0].scrollTop = $commentList[0].scrollHeight;\n    }\n\n    private doSaveComment() {\n        let $commentWidget = this.$widget.find('.proposalCommentForm'),\n            $commentList = $commentWidget.find('.commentList'),\n            text = $commentWidget.find('textarea').val();\n\n        if (text == '' || this.savingComment) {\n            return;\n        }\n\n        this.savingComment = true;\n        $.post(this.saveUrl, {\n            writeComment: text,\n            _csrf: this.csrf\n        }, (ev) => {\n            if (ev.success) {\n                let delHtml = '';\n                if (ev.comment.delLink) {\n                    delHtml = '<button type=\"button\" data-url=\"' + ev.comment.delLink + '\" class=\"btn-link delComment\">';\n                    delHtml += '<span class=\"glyphicon glyphicon-trash\"></span></button>';\n                }\n                let $comment = $('<li class=\"comment\"><div class=\"header\"><div class=\"date\"></div>' + delHtml + '<div class=\"name\"></div></div><div class=\"comment\"></div></li>');\n                $comment.find('.date').text(ev.comment.dateFormatted);\n                $comment.find('.name').text(ev.comment.username);\n                $comment.find('.comment').text(ev.comment.text);\n                $comment.data('id', ev.comment.id);\n                $commentList.append($comment);\n                $commentWidget.find('textarea').val('');\n                $commentList[0].scrollTop = $commentList[0].scrollHeight;\n            } else {\n                alert('Could not save: ' + JSON.stringify(ev));\n            }\n            this.savingComment = false;\n        }).fail(() => {\n            alert('Could not save');\n            this.savingComment = false;\n        });\n    }\n\n    private delComment($comment: JQuery) {\n        $.post($comment.find(\".delComment\").data(\"url\"), {\n            \"_csrf\": this.csrf,\n            \"id\": $comment.data(\"id\"),\n        }, (ret) => {\n            if (ret['success']) {\n                $comment.remove();\n            } else {\n                alert(\"Error: \" + ret['error']);\n            }\n        });\n    }\n\n    private initCommentForm() {\n        this.$widget.on('click', '.proposalCommentForm button', () => {\n            this.doSaveComment();\n        });\n        this.commentsScrollBottom();\n\n        this.$widget.on('keypress', '.proposalCommentForm textarea', (ev) => {\n            if (ev.originalEvent['metaKey'] && ev.originalEvent['keyCode'] === 13) {\n                this.doSaveComment();\n            }\n        });\n\n        this.$widget.on('click', '.delComment', (ev) => {\n            this.delComment($(ev.currentTarget).parents(\".comment\").first());\n        });\n    }\n}\n"]}