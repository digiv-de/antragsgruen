{"version":3,"sources":["backend/MotionTypeEdit.ts"],"names":["CONTACT_NONE","CONTACT_OPTIONAL","CONTACT_REQUIRED","SUPPORTER_ONLY_INITIATOR","SUPPORTER_GIVEN_BY_INITIATOR","SUPPORTER_COLLECTING_SUPPORTERS","TYPE_TITLE","TYPE_TEXT_SIMPLE","TYPE_TEXT_HTML","TYPE_IMAGE","TYPE_TABULAR","TYPE_PDF_ATTACHMENT","TYPE_PDF_ALTERNATIVE","MotionTypeEdit","$","on","removeClass","addClass","tooltip","this","initSectionList","initDeadlines","initInitiatorForm","$sameSettings","prop","trigger","prototype","$form","_this","$initiatorGender","find","$supportType","$supportAllowMore","selected","parseInt","val","is","data","motionsHaveSupporters","setMaxPdfSupporters","$initiatorCanBePerson","$initiatorCanBeOrga","filter","supportType","amendmentsHaveSupporters","ev","currentTarget","each","i","el","$el","datetimepicker","locale","initLinkedDeadlinePickers","$row","$from","$to","useCurrent","setErrorState","fromDate","date","toDate","isBefore","hasError","$deadlineHolder","addDeadlineRow","html","replace","$newRow","append","parents","remove","children","length","$list","newCounter","Sortable","create","handle","animation","preventDefault","$sectionHolder","first","delId","bootbox","confirm","__t","result","$li","newStr","$newObj","$tab","dataNewCounter","$this","$ul","parent"],"mappings":"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","file":"MotionTypeEdit.js","sourcesContent":["declare var Sortable;\n\nconst CONTACT_NONE = 0;\nconst CONTACT_OPTIONAL = 1;\nconst CONTACT_REQUIRED = 2;\n\n// noinspection JSUnusedGlobalSymbols\nconst SUPPORTER_ONLY_INITIATOR = 0;\n// noinspection JSUnusedGlobalSymbols\nconst SUPPORTER_GIVEN_BY_INITIATOR = 1;\nconst SUPPORTER_COLLECTING_SUPPORTERS = 2;\n\nconst TYPE_TITLE = 0;\nconst TYPE_TEXT_SIMPLE = 1;\nconst TYPE_TEXT_HTML = 2;\nconst TYPE_IMAGE = 3;\nconst TYPE_TABULAR = 4;\nconst TYPE_PDF_ATTACHMENT = 5;\nconst TYPE_PDF_ALTERNATIVE = 6;\n\nclass MotionTypeEdit {\n    private motionsHaveSupporters: boolean;\n    private amendmentsHaveSupporters: boolean;\n\n    constructor() {\n        $('.deleteTypeOpener button').on('click', () => {\n            $('.deleteTypeForm').removeClass('hidden');\n            $('.deleteTypeOpener').addClass('hidden');\n        });\n\n        $('[data-toggle=\"tooltip\"]').tooltip();\n\n        this.initSectionList();\n        this.initDeadlines();\n\n        this.initInitiatorForm($(\"#motionSupportersForm\"));\n        this.initInitiatorForm($(\"#amendmentSupportersForm\"));\n\n        const $sameSettings = $(\"#sameInitiatorSettingsForAmendments input\");\n        $sameSettings.on(\"change\", () => {\n            if ($sameSettings.prop(\"checked\")) {\n                $('section.amendmentSupporters').addClass(\"hidden\");\n            } else {\n                $('section.amendmentSupporters').removeClass(\"hidden\");\n            }\n        }).trigger(\"change\");\n    }\n\n    private initInitiatorForm($form: JQuery) {\n        const $initiatorGender = $form.find(\".contactGender input\");\n\n        const $supportType = $form.find(\".supportType\");\n        const $supportAllowMore = $form.find(\".formGroupAllowMore input\");\n\n        $supportAllowMore.on('change', () => {\n            const selected = parseInt($supportType.find('input').val() as string, 10);\n            if ((selected === SUPPORTER_COLLECTING_SUPPORTERS || selected) === SUPPORTER_GIVEN_BY_INITIATOR && $supportAllowMore.is(':checked')) {\n                $form.find('.formGroupAllowAfterPub').removeClass('hidden');\n            } else {\n                $form.find('.formGroupAllowAfterPub').addClass('hidden');\n            }\n        }).trigger('change');\n\n        $supportType.on('changed.fu.selectlist', () => {\n            const selected = $supportType.find('input').val();\n            const hasSupporters = $supportType.find(\"li[data-value=\\\"\" + selected + \"\\\"]\").data(\"has-supporters\");\n\n            if (hasSupporters) {\n                $form.find('.formGroupMinSupporters').removeClass('hidden');\n                $form.find('.formGroupAllowMore').removeClass('hidden');\n                this.motionsHaveSupporters = true;\n            } else {\n                $form.find('.formGroupMinSupporters').addClass('hidden');\n                $form.find('.formGroupAllowMore').addClass('hidden');\n                this.motionsHaveSupporters = false;\n            }\n            $initiatorGender.trigger('change');\n            $supportAllowMore.trigger('change');\n            this.setMaxPdfSupporters();\n        }).trigger('changed.fu.selectlist');\n\n        const $initiatorCanBePerson = $form.find(\"input[name=initiatorCanBePerson]\");\n        const $initiatorCanBeOrga = $form.find(\"input[name=initiatorCanBeOrganization]\");\n        $initiatorCanBePerson.on(\"change\", () => {\n            if ($initiatorCanBePerson.prop(\"checked\")) {\n                $form.find(\".formGroupGender\").removeClass(\"hidden\");\n            } else {\n                $form.find(\".formGroupGender\").addClass(\"hidden\");\n                if (!$initiatorCanBeOrga.prop(\"checked\")) {\n                    $initiatorCanBeOrga.prop(\"checked\", true).trigger(\"change\");\n                }\n            }\n        });\n        $initiatorCanBeOrga.on(\"change\", () => {\n            if ($initiatorCanBeOrga.prop(\"checked\")) {\n                $form.find(\".formGroupResolutionDate\").removeClass(\"hidden\");\n            } else {\n                $form.find(\".formGroupResolutionDate\").addClass(\"hidden\");\n                if (!$initiatorCanBePerson.prop(\"checked\")) {\n                    $initiatorCanBePerson.prop(\"checked\", true).trigger(\"change\");\n                }\n            }\n        });\n\n        $initiatorGender.on(\"change\", () => {\n            const selected = parseInt($initiatorGender.filter(\":checked\").val() as string, 10);\n            const supportType = parseInt($supportType.find('input').val() as string, 10);\n            if (selected !== CONTACT_NONE && supportType === SUPPORTER_COLLECTING_SUPPORTERS) {\n                $form.find(\".formGroupMinFemale\").removeClass(\"hidden\");\n            } else {\n                $form.find(\".formGroupMinFemale\").addClass(\"hidden\");\n            }\n        }).trigger(\"change\");\n    }\n\n    private setMaxPdfSupporters() {\n        if (this.amendmentsHaveSupporters || this.motionsHaveSupporters) {\n            $('#typeMaxPdfSupportersRow').removeClass('hidden');\n        } else {\n            $('#typeMaxPdfSupportersRow').addClass('hidden');\n        }\n    }\n\n    private initDeadlines() {\n        $('#deadlineFormTypeComplex').on(\"change\", (ev) => {\n            if ($(ev.currentTarget).prop('checked')) {\n                $('.deadlineTypeSimple').addClass('hidden');\n                $('.deadlineTypeComplex').removeClass('hidden');\n            } else {\n                $('.deadlineTypeSimple').removeClass('hidden');\n                $('.deadlineTypeComplex').addClass('hidden');\n            }\n        }).trigger('change');\n\n        $('.datetimepicker').each((i, el) => {\n            const $el = $(el);\n            $el.datetimepicker({\n                locale: $el.find(\"input\").data('locale')\n            });\n        });\n\n        const initLinkedDeadlinePickers = ($row) => {\n            let $from = $row.find(\".datetimepickerFrom\"),\n                $to = $row.find(\".datetimepickerTo\");\n            $from.datetimepicker({\n                locale: $from.find(\"input\").data('locale')\n            });\n            $to.datetimepicker({\n                locale: $to.find(\"input\").data('locale'),\n                useCurrent: false\n            });\n\n            const hasError = () => {\n                const fromDate = $from.data(\"DateTimePicker\").date(),\n                    toDate = $to.data(\"DateTimePicker\").date();\n\n                return (fromDate && toDate && toDate.isBefore(fromDate));\n            };\n\n            const setErrorState = () => {\n                if (hasError()) {\n                    $from.addClass(\"has-error\");\n                    $to.addClass(\"has-error\");\n                } else {\n                    $from.removeClass(\"has-error\");\n                    $to.removeClass(\"has-error\");\n                }\n            };\n\n            $from.on(\"dp.change\", setErrorState);\n            $to.on(\"dp.change\", setErrorState);\n        };\n\n        $('.deadlineEntry').each((i, el) => {\n            initLinkedDeadlinePickers($(el));\n        });\n\n        $('.deadlineHolder').each((i, el) => {\n            const $deadlineHolder = $(el),\n                addDeadlineRow = () => {\n                    let html = $('.deadlineRowTemplate').html();\n                    html = html.replace(/TEMPLATE/g, $deadlineHolder.data('type'));\n                    let $newRow = $(html);\n                    $deadlineHolder.find('.deadlineList').append($newRow);\n                    initLinkedDeadlinePickers($newRow);\n                };\n            $deadlineHolder.find('.deadlineAdder').on(\"click\", addDeadlineRow);\n            $deadlineHolder.on('click', '.delRow', (ev) => {\n                $(ev.currentTarget).parents('.deadlineEntry').remove();\n            });\n            if ($deadlineHolder.find('.deadlineList').children().length === 0) {\n                addDeadlineRow();\n            }\n        });\n    }\n\n    private initSectionList() {\n        let $list = $('#sectionsList'),\n            newCounter = 0;\n\n        $list.data(\"sortable\", Sortable.create(<HTMLElement>$list[0], {\n            handle: '.drag-handle',\n            animation: 150\n        }));\n        $list.on('click', 'a.remover', function (ev) {\n            ev.preventDefault();\n            let $sectionHolder = $(this).parents('li').first(),\n                delId = $sectionHolder.data('id');\n            bootbox.confirm(__t('admin', 'deleteMotionSectionConfirm'), function (result) {\n                if (result) {\n                    $('.adminTypeForm').append('<input type=\"hidden\" name=\"sectionsTodelete[]\" value=\"' + delId + '\">');\n                    $sectionHolder.remove();\n                }\n            });\n        });\n        $list.on('change', '.sectionType', function () {\n            let $li = $(this).parents('li').first(),\n                val = parseInt($(this).val() as string);\n            $li.removeClass('title textHtml textSimple image tabularData pdfAlternative pdfAttachment');\n            if (val === TYPE_TITLE) {\n                $li.addClass('title');\n            } else if (val === TYPE_TEXT_SIMPLE) {\n                $li.addClass('textSimple');\n            } else if (val === TYPE_TEXT_HTML) {\n                $li.addClass('textHtml');\n            } else if (val === TYPE_IMAGE) {\n                $li.addClass('image');\n            } else if (val === TYPE_TABULAR) {\n                $li.addClass('tabularData');\n                if ($li.find('.tabularDataRow ul > li').length == 0) {\n                    $li.find('.tabularDataRow .addRow').trigger(\"click\").trigger(\"click\").trigger(\"click\");\n                }\n            } else if (val === TYPE_PDF_ATTACHMENT) {\n                $li.addClass('pdfAttachment');\n            } else if (val === TYPE_PDF_ALTERNATIVE) {\n                $li.addClass('pdfAlternative');\n            }\n        });\n        $list.find('.sectionType').trigger('change');\n        $list.on('change', '.maxLenSet', function () {\n            let $li = $(this).parents('li').first();\n            if ($(this).prop('checked')) {\n                $li.addClass('maxLenSet').removeClass('no-maxLenSet');\n            } else {\n                $li.addClass('no-maxLenSet').removeClass('maxLenSet');\n            }\n        });\n        $list.find('.maxLenSet').trigger('change');\n\n        $('.sectionAdder').on('click', function (ev) {\n            ev.preventDefault();\n            let newStr = $('#sectionTemplate').html();\n            newStr = newStr.replace(/#NEW#/g, 'new' + newCounter);\n            let $newObj = $(newStr);\n            $list.append($newObj);\n            newCounter = newCounter + 1;\n\n            $list.find('.sectionType').trigger('change');\n            $list.find('.maxLenSet').trigger('change');\n\n            let $tab = $newObj.find('.tabularDataRow ul');\n            $tab.data(\"sortable\", Sortable.create(<HTMLElement>$tab[0], {\n                handle: '.drag-data-handle',\n                animation: 150\n            }));\n        });\n\n        let dataNewCounter = 0;\n        $list.on('click', '.tabularDataRow .addRow', function (ev) {\n            ev.preventDefault();\n            let $this = $(this),\n                $ul = $this.parent().find(\"ul\"),\n                $row = $($this.data('template').replace(/#NEWDATA#/g, 'new' + dataNewCounter));\n            dataNewCounter = dataNewCounter + 1;\n            $row.removeClass('no0').addClass('no' + $ul.children().length);\n            $ul.append($row);\n            $row.find('input').trigger('focus');\n        });\n\n        $list.on('click', '.tabularDataRow .delRow', function (ev) {\n            let $this = $(this);\n            ev.preventDefault();\n            bootbox.confirm(__t('admin', 'deleteDataConfirm'), function (result) {\n                if (result) {\n                    $this.parents(\"li\").first().remove();\n                }\n            });\n        });\n\n        $list.find('.tabularDataRow ul').each(function () {\n            let $this = $(this);\n            $this.data(\"sortable\", Sortable.create(this, {\n                handle: '.drag-data-handle',\n                animation: 150\n            }));\n        });\n    }\n}\n\n\nnew MotionTypeEdit();\n"]}