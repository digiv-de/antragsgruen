{"version":3,"sources":["backend/MoveMotion.ts"],"names":["MoveMotion","$form","this","checkBackend","data","initTarget","initConsultation","initButtonEnabled","prototype","_this","$target","find","on","selected","filter","val","removeClass","addClass","rebuildMotionTypes","trigger","$","bind","consultationId","isPrefixAvailable","prefix","consultation","get","checkType","newMotionPrefix","newConsultationId","then","res","console","log","rebuildButtonEnabled","isEnabled","parseInt","_a","sent","prop","exports"],"mappings":"qhDAAA,IAAAA,EAAA,WAGI,SAAAA,EAAoBC,GAAAC,KAAAD,MAAAA,EAChBC,KAAKC,aAAeF,EAAMG,KAAK,iBAC/BF,KAAKG,aACLH,KAAKI,mBACLJ,KAAKK,oBAgFb,OA7EYP,EAAAQ,UAAAH,WAAR,WAAA,IAAAI,EAAAP,KACUQ,EAAUR,KAAKD,MAAMU,KAAK,sBAChCD,EAAQE,GAAG,SAAU,WACjB,IAAMC,EAAWH,EAAQI,OAAO,YAAYC,MAC3B,WAAbF,EACAJ,EAAKR,MAAMU,KAAK,qBAAqBK,YAAY,UAEjDP,EAAKR,MAAMU,KAAK,qBAAqBM,SAAS,UAEjC,iBAAbJ,EACAJ,EAAKR,MAAMU,KAAK,2BAA2BK,YAAY,UAEvDP,EAAKR,MAAMU,KAAK,2BAA2BM,SAAS,UAGxDR,EAAKS,uBACNC,QAAQ,WAGPnB,EAAAQ,UAAAF,iBAAR,WACIc,EAAE,mBAAmBR,GAAG,wBAAyBV,KAAKgB,mBAAmBG,KAAKnB,QAG1EF,EAAAQ,UAAAU,mBAAR,WACI,IAAMI,EAAiBF,EAAE,mBAAmBT,KAAK,4BAA4BI,MAC7EK,EAAE,uBAAuBH,SAAS,UAC0B,iBAAxDf,KAAKD,MAAMU,KAAK,8BAA8BI,OAC9CK,EAAE,sBAAwBE,GAAgBN,YAAY,WAItDhB,EAAAQ,UAAAe,kBAAR,SAA0BC,EAAgBC,GACtC,OAAOL,EAAEM,IAAIxB,KAAKC,aAAc,CAC5BwB,UAAW,SACXC,gBAAiBJ,EACjBK,kBAAmBJ,IACpBK,KAAK,SAAAC,GAEJ,OADAC,QAAQC,IAAIF,GACLA,KAID/B,EAAAQ,UAAA0B,qBAAd,6HAU8B,OATtBC,GAAY,EAIZb,EADwD,iBAAxDpB,KAAKD,MAAMU,KAAK,8BAA8BI,MAC7BqB,SAASlC,KAAKD,MAAMU,KAAK,4BAA4BI,OAErD,KAGK,CAAA,EAAMb,KAAKqB,kBAAkBrB,KAAKD,MAAMU,KAAK,sBAAsBI,MAAiBO,kBAApFe,EAAAC,OAEtBpC,KAAKD,MAAMU,KAAK,uBAAuBM,SAAS,WAEhDf,KAAKD,MAAMU,KAAK,uBAAuBK,YAAY,UACnDmB,GAAY,GAGXjC,KAAKD,MAAMU,KAAK,iCAAiCI,QAClDoB,GAAY,GAEXjC,KAAKD,MAAMU,KAAK,8BAA8BI,QAC/CoB,GAAY,GAGhBjC,KAAKD,MAAMU,KAAK,uBAAuB4B,KAAK,YAAaJ,aAGrDnC,EAAAQ,UAAAD,kBAAR,WACIL,KAAKD,MAAMU,KAAK,sBAAsBC,GAAG,eAAgBV,KAAKgC,qBAAqBb,KAAKnB,OACxFA,KAAKD,MAAMU,KAAK,yBAAyBC,GAAG,SAAUV,KAAKgC,qBAAqBb,KAAKnB,OACrFA,KAAKD,MAAMU,KAAK,sBAAsBC,GAAG,SAAUV,KAAKgC,qBAAqBb,KAAKnB,OAClFkB,EAAE,mBAAmBR,GAAG,wBAAyBV,KAAKgC,qBAAqBb,KAAKnB,OAChFA,KAAKgC,wBAEblC,EAvFA,GAAawC,EAAAxC,WAAAA","file":"MoveMotion.js","sourcesContent":["export class MoveMotion {\n    private checkBackend: string;\n\n    constructor(private $form: JQuery) {\n        this.checkBackend = $form.data('check-backend');\n        this.initTarget();\n        this.initConsultation();\n        this.initButtonEnabled();\n    }\n\n    private initTarget() {\n        const $target = this.$form.find(\"input[name=target]\");\n        $target.on(\"change\", () => {\n            const selected = $target.filter(\":checked\").val();\n            if (selected === \"agenda\") {\n                this.$form.find(\".moveToAgendaItem\").removeClass('hidden');\n            } else {\n                this.$form.find(\".moveToAgendaItem\").addClass('hidden');\n            }\n            if (selected === \"consultation\") {\n                this.$form.find(\".moveToConsultationItem\").removeClass('hidden');\n            } else {\n                this.$form.find(\".moveToConsultationItem\").addClass('hidden');\n            }\n\n            this.rebuildMotionTypes();\n        }).trigger(\"change\");\n    }\n\n    private initConsultation() {\n        $(\"#consultationId\").on(\"changed.fu.selectlist\", this.rebuildMotionTypes.bind(this));\n    }\n\n    private rebuildMotionTypes() {\n        const consultationId = $(\"#consultationId\").find(\"input[name=consultation]\").val();\n        $(\".moveToMotionTypeId\").addClass(\"hidden\");\n        if (this.$form.find(\"input[name=target]:checked\").val() === \"consultation\") {\n            $(\".moveToMotionTypeId\" + consultationId).removeClass(\"hidden\");\n        }\n    }\n\n    private isPrefixAvailable(prefix: string, consultation: number): Promise<boolean> {\n        return $.get(this.checkBackend, {\n            checkType: 'prefix',\n            newMotionPrefix: prefix,\n            newConsultationId: consultation\n        }).then(res => {\n            console.log(res);\n            return res;\n        });\n    }\n\n    private async rebuildButtonEnabled() {\n        let isEnabled = true;\n\n        let consultationId;\n        if (this.$form.find('input[name=target]:checked').val() === 'consultation') {\n            consultationId = parseInt(this.$form.find('input[name=consultation]').val() as string);\n        } else {\n            consultationId = null;\n        }\n\n        const prefixIsAvailable = await this.isPrefixAvailable(this.$form.find('#motionTitlePrefix').val() as string, consultationId);\n        if (prefixIsAvailable) {\n            this.$form.find(\".prefixAlreadyTaken\").addClass(\"hidden\");\n        } else {\n            this.$form.find(\".prefixAlreadyTaken\").removeClass(\"hidden\");\n            isEnabled = false;\n        }\n\n        if (!this.$form.find('input[name=operation]:checked').val()) {\n            isEnabled = false;\n        }\n        if (!this.$form.find('input[name=target]:checked').val()) {\n            isEnabled = false;\n        }\n\n        this.$form.find(\"button[type=submit]\").prop(\"disabled\", !isEnabled);\n    }\n\n    private initButtonEnabled() {\n        this.$form.find('#motionTitlePrefix').on('change keyup', this.rebuildButtonEnabled.bind(this));\n        this.$form.find('input[name=operation]').on('change', this.rebuildButtonEnabled.bind(this));\n        this.$form.find('input[name=target]').on('change', this.rebuildButtonEnabled.bind(this));\n        $(\"#consultationId\").on(\"changed.fu.selectlist\", this.rebuildButtonEnabled.bind(this));\n        this.rebuildButtonEnabled();\n    }\n}\n"]}